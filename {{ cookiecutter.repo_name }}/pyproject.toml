[tool.poetry] # name of the package, required
name = "{{ cookiecutter.repo_name }}" # Req: name of package
version = "{{ cookiecutter.version }}" # Req: follow semantic versioning
description = "{{ cookiecutter.description }}" # Req: short description
authors = ["{{ cookiecutter.author_name }} <{{cookiecutter.email}}>"] # Req: must be in form [name <email>]
license = "{{cookiecutter.open_source_license}}" # Opt: recommended
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}" # Opt
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}" # Opt
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io" # Opt
keywords = ["computer vision"] # Opt
readme ="README.md" # Opt
classifiers = [
    "{{cookiecutter.development_status}}",
]
packages = [
    { include = "src" },
]
#include = ["CHANGELOG.md"] # Opt: list of patterns to include
#exclude = ["CHANGELOG.md"] # Opt: list of patterns to include

[tool.poetry.dependencies] # Project dependencies (looks to PyPi by default)
python = ">=3.8,<3.11"
click = ">=8.0.3"
coverage = ">6.0.2"
python-dotenv = ">=0.19.0"
pandas = ">=1.3.2"
numpy = ">=1.21"
PyYAML = ">=5.4"
requests = "~=2.25.1"
keras = ">=2.7.0"
Pillow = "9.0.1"
opencv-contrib-python = "~=4.5.2.52"
tensorflow = "~=2.9.1"
scikit-learn = "^1.1.1"
hyperopt = "^0.2.7"
tableone = "^0.7.10"
tensorflow-addons = "^0.17.1"

[tool.poetry.dev-dependencies] # Project dev-dependencies
pytest = "^7.1.2"
flake8 = "^4.0.1"
pytest-randomly = "^3.12.0"
Sphinx = "~=5.1.0"
black = "~=22.6.0"
isort = "~=5.10.1"
pre-commit = "^2.20.0"
sphinxcontrib-napoleon = "^0.7"
mpy = "^0.1"

[tool.poetry.scripts] # scripts or executables that will be installed when installing the package
{{cookiecutter.project_name}} = "{{cookiecutter.repo_name}}.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.repo_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.black]
line-length = 79
target-version = ['py36', 'py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.dvc
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

